<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAGABoHwAAFgAAACgAAAAyAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABgMBViMRVjMRZjMRZkMhZmNBdoNhhqOBlsORpvOxtxPRxzPx12QR55Qx97RiB9SCGASiKCTCOFTiOH
        USWJUyaMVSaPViiRWCmUWimWXCqYXiybYC6dYy6fZi2iaiylbiuncymqdyeufSixgymzhiS2iiG4jx+7
        kx++mB7AnBzEoBrHpRnJqhjMrxbPtBXSuhPVvhLXwxAAAF8uFWAvFmEwFmEwFWIxFWMyFmQzF2Y0F2c1
        GGo3GWw5Gm87G3E+HHNAHXZCHnhEHnpGIH1IIYBKIYJMI4VPJIhRJIpTJoxUJ45WJ5BXKJNaKphgMJpg
        L5tgK51iLJ9lLaJoLKVtKqdyKap4KK58JrCBJLKFI7aJIriOILuSH76XHcGcHMOhG8alGsmqGMyvFs+z
        FdG4EwAAXi0UXi4VXy8WYC8VYDAVYTAWYjEWYzIWZDIWZDARZTERaDMTajQUbTcVcDoWcToWdDwXdz8Z
        ekEZfUQaf0YcgkkchUsdh00fiU4fi1AgjlMiklcmlVgml1klmFolm10mnmEooGUromkspG0rp3Ipqnco
        rXwmsIAls4QjtYkiuI4hupIfvZcewJscw6AbxqUayaoYy64XAABcLRNdLRRdLRVeLhVfLxVgLxVgLxRg
        LxNiMhZlOiFmPCNnPCJrPyRsPyVtQCVxQyZzRSd1Rih4SSl5Sil7TCp+Ti1/UC2AUi2EVC6GVS+HVzCK
        WTGMWjKOXDKRXzOSYTSVYjOaYCydYSufZCyhaCukbSqocSmqdieteyawgCWyhCO1iCG4jR+6kR69lx7A
        nB3DoBvFpRoAAFsqE1srFFsrFFwsFF4tFF4tFF0qEFwmCWM0G3htZXh2cnVwaoB8b3pxb3NnbX52cH13
        cHp0cHx1cnl1bnh0bnxze3hzdnZ0bn95c353cnt1b4B5dH12cXt0boJ7dX57d39xZZJcLZpZIZteJ55g
        J6BiKKNlKKVrJqlxJax2JK15IbF+ILSEH7aIHLiNHrqSIL2WHr+bHAAAWSkSWioTWisTWioTWSULXi0U
        cVdIc1xQdF9XhYWJhIqOgISFh4qMhYeMg4OKiYuMhIeHgYOEiYuLhYmFgIWAh4iMg4WJf4KFh4qNg4eJ
        gIOGh4qNg4aJfYGEf4KGeX6Dd3d3iG9aiWpQh2pQjG9VjG5UjG5TknZYjnNSjHJOmH9Yln1TkXpNloFU
        qIQ4uIcau40bvJEdAABWKBJYKRJZKhJbKxReLhdjPyxra2hpcnVnanBsbHVqa25maGlnZ3BrbHBvcW5u
        b29oZ2dmZGRycXBvbWlqaGBycGVwbGZtZ2hwb29rbGxoaGhvb29qampqamp9fX1+fX16enuAg4Z7f4J3
        en18f4N7foF6fYCAg4d5fIB0d3uDhYp9f4Rzd313fIeSflqsgCusgy6xhygAAFUmEVYmEVkoE2AwGnxi
        WHZ0dRUZFQABAAQFBQUFCQQGBgQHBAQHBwQFCAQFBwUKBQQGBwMDCwcFEggFCggDAgsFBgwIBQsKBAkJ
        CAUGBgMDAwUFBQAAABISEnFxcYuLi4WFhYOEhIOEhIKDhH5/gIKDg4WFhn5/gISEhYiIiX19fn9/gIGC
        g3h5e358d4V/dX16c5d9SQAAVCUQVycSVCUQPhcGPC0qREpSS1BQV1xXX2VdWl9bVlxbVltaXlxVZmJb
        ZmNeVFJRW1tXZWZfXF1ZXFpdW1heUlFQVlhSWl1XUFFQVVVVWlpaVFRUWFhYV1dXQEBANjY2MjIyLi4u
        Ly8vMTExLS0tLy8vMDAwKysrMDAwMzMzKioqJycnOjo6dXV0g4WIfICHcniEj3dSAABTIxBTJA9QJhNF
        KyEOBQUMDhSipqbBxMuurr+lpry0usW/xcmtprixqbm7uL+9vL66ub6zsbumo6+3t8HJy9G6wL69xcDD
        ycW7u7vCwsLLy8vExMTT09OxsbEREREAAAAaGhoYGBgXFxcYGBgaGhoYGBgVFRUYGBgWFhYVFRUaGhoT
        ExMfHx9dXV15eXl/gIB4e3+Pc1EAAFIjDz8VAlIyI8q5uWRgYQsQDK62q4N3qCMDdR8BfXNsnaGssCQi
        kQAAcygwdqC8vWt2pBICdhgAfWdkmrbGurvAyrW6wLK5tcDBwbu6urS0tMDAwMbGxpqamgsLC1xcXNzc
        3N3d3djY2NTU1N3d3dXV1c7Ozt7e3tjY2NHR0d7e3uTk5LW1tR8fHzY2Nn5+f32Ag49yVgAAUSIPMAsA
        RC8m7+fmfn18Cw8Ktbq0paC9YlKUaVqgmJivsLq4bW6vUlKbZ2yZucvNk5u4WFCWZVmjkJCvu8a+x8rT
        wMTKu7++zM3MxMTEvLy8zMzM0dHRnp6eAAAAcHBw/////////////////////////////////////f39
        ////////1tbWEhISKCgofX5+f4OGjnFXAABRIQ4mBgA0JyPn5eB8fXoEBQSPkJKssK2hqJ+utqiiqqGZ
        n5uvsKitq6alo6Opp6ykpKSipJ2tsaijpaCYmJqjo6afoKKam5ykpKShoaGfn5+pqamtra2MjIwjIyNr
        a2vX19fe3t7U1NTMzMzc3NzY2NjS0tLY2Njl5eXz8/P9/f3////MzMwaGhovLy9/f4B/goWLblUAAFAh
        DyUHADAlIt7c3Xt7fAAAABAQFBgZGhcYFhkaFw8QFQcHEBANCxALCg0JDQ4JEQ0JEQ0JDg8LDAsJCQgH
        BwsJCgoICgkHCQgICBAQEBgYGBgYGAsLCy4uLsTExHt7ewQEBA4ODhISEhISEhISEhAQEAwMDAICAoiI
        iP////X19f///93d3RgYGDExMYaHh3l8f4RnTwAATh8OJQcAMCYg1dTU1NPXeHZ6BgYIAAAAAAAAAAAA
        PT1AjIuQfn18gH9/hYOGfHt9gICAhYSCe3p2gH99hYOEe3p7gH5+hoWDgoKCNjc3AAAAAAAAAAAAGBgY
        8PHx2NjYeHh4dXV1fX19goKCdnZ2enp6fn5+cXFxvLy8////7u7u////4uLiFxcXMjIyiImJeHt+f2RN
        AABLHA0kBgAxJyDW1dT////QzdIbGxsAAAAAAAAAAAB4dnb6+Pfe39/i4+Tr6+vb39vk5t/s6+Tb3tXk
        5ODu6uzd3N7k5OLv7unr6upta2wAAAAAAAAAAAAZFxe4trbt7e3r6+ve3t3k5OTq6urb29vj4+Pr6+ve
        3t7s7Oz7+/vv7+/////e3t4XFxcxMTGGh4h7f4J+ZE4AAEobDCEDADMpJO3r66KhohIOEQAAAAAAAAEA
        AAAAAAoEByIXFhQSEhoTEyAWExEUEBsUFSQVGBIWEBoVEiMTFRIRERgUEiEXFBcTFg4CBQMAAAAAAAAA
        AAYAACMYGCAcGxMVExETERIUEhQVFBISEhMTExEREQUFBX9/f/39/f7+/v///8/PzxYWFi0tLYCBgoKI
        jIFoVQAASBoKHgAAMCcj7vLufX99AAAAfmxxP4SEAHh0hn+FOXJzAGdhdnBwMWxuAGhpdHFxNGxvAGds
        cnJyMGxtAGVqdXBxMWtrAGdncnByOnVzAXl1g3+DSIaCAGleAAAAMSQkbnFtbnRyaW5rZ2llcnJybGxs
        ZGRkampqrq6u9fX1////////y8vLFxYWLTEzfn5+fWhafFI1AABHGgsaAAAoJCHo8Ot+f30TEhLR6ueG
        //80//be//+G//8w/vXd//+H//8x/v/e//+M//82/f/Z//+E//8y/P/e//+I//8x/P7Y//+C//8v//Xd
        //+V//8P4tEAEBKAcHH////////////////////////////////////y8vL+/v7////T09MXGBgsLCx7
        bmd0QyJ0OxUAAEodEBUBACAjJOvt8JB/hQAPEwLVyYz//9r++yXx7Hz49Nb//ibz84P59+D+/Czy9Yf3
        99/9+iT29X37+Nj++yPz9IH4+N3//Cb28n349Nj7+Sv1+Ij//9vf3Q8QEHh3ef/////////////////+
        //////////////////////r6+v///+vr7BUaHSINAnJBJW47G287GgAASB0RMA8GLBoVdG5wOzE4CRUa
        Zc3KgP//ff//eevqevX0e//+de3se/b1gv/9fe3tfvT1gP79ePHuefn1e//9dO3te/b2gv/+e+zufPT1
        ff79duzthv//duHhEBgdPDE0hoaHfXh6fnp8gH6Ad3d3fHx8f39/b29vc3NzeHh4b29ueHx9cnJyNyQY
        Rh4HaTITaDYYajgZAABDGQ5IGw48EgYLAAAAAAAfHiLP09d4//8h+/zR7/R69vkh/v3J8fB0+Pgi/v/P
        8fB39/cf/v7P8/B4+fcg/v7K8PB39/ck/v/Q7fN79Pck+/vG7OuC//8K494LHSUAAAAAAAAAAAAAAAAA
        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
        1tfSwcG/xcPFy8jLvL2+xcTHz8rPw7rAx8PGy8zLvb2+xcXEycrIr7Oxs7e4w8XIys7NxMbExcbE4ujp
        5ePoq6KoCQgJhIWE7+/vGxsbMjIyiImJe31+XEY/QxQERhkKRxsLSBsMSRwLSh0MAAAqAgAqAgArAgAr
        AgAqAgAqAgAqAgAtAwAiAAAAAACLjo/s6+gfGBVPVVC9zsixuLW3ubi/vr64tbe8uLrCvLy7tbK+uLfA
        ury6sbTAt7vDvcCytLawt7TDysP08e/Y2Nm9wMLy6u/x4uusnacJBwiCg4Ls7OwaGhoxMTGHiIh+gYJe
        SEFBEgNFFwhGGQpGGgtHGgtIGwsAACoCACoCACsDACsCACoCACoCACsCAC4DACMAAAAAAISGh97e3hYV
        FUpLSr7BwMLDwri4uLGxsb+/v7q6urSzs7y7urm4uLa1tb+9vrm4uLSzs76+vrW2tr6/vv38/Nra2ri4
        ufz6++vp6peVlwcHB3x8fODg4BkZGS0tLYKDg4aLjGJOSD4QAkIVCEQXCkUYCkUYC0YZCwAAKgIAKwMA
        KwMAKwMAKgMAKgIAKwIALgIAIwAAAAAAgYSE2dnaExQUT09PzMvLz8/PxcTEvb29y8vLxcXFvb6+ycrK
        xMTFv7+/zMzMxMTEvb29zMzLxMPDw8LD6enq1NTUwMDA6Ojo4eLinp+fCAgIeHh429vbGBgYMDM0f39/
        ZlRQTiwjPhIGQRUIQhYJQxcKRBcLRBgLAAArAgAqAwAqAwArAwArAwAqAwArAgAtAgAiAAAAAACEhobd
        3d0UFBQ9PT2np6elpaWhoaGdnZ2jo6Ofn5+dnZ2mpqahoaGcnJylpaWhoaGdnZ2lpaWgoKCbm5uioqKf
        n5+bm5ugoKCnp6eDg4MCAgJ7e3ve3t4ZGRksLCxwZWNCGQ45CgA/FAlAFQlBFQlBFgpCFgpDFwoAACsD
        ACoDACoCACsCACsCACsCACsCAC0CACIAAAAAAI2Pj+vr6xUVFQAAAAgICAkJCQkJCQgICAkJCQgICAgI
        CAwMDAoKCgcHBwkJCQkJCQkJCQkJCQgICAcHBwkJCQgICAcHBwgICAoKCgQEBAAAAIaGhu3t7R4gIBEA
        AEQdEz0RBzwQBj4SCD4SCD8TCUAUCUEUCEIVCQAAKwIAKwIAKwIAKwIAKwIAKwIAKwIALQIAIgAAAAAA
        jZGS////mJmZfHx8g4ODe3t7fX19gYGBe3t7gICAg4ODe3t7f39/g4ODe3t7f39/hISEe3t7f39/g4OD
        e3t7f39/g4ODe3t7f39/hISEfX193Nvb9vf3HCEiBwAAOwsAQBYNPxUMPBEHPREHPRIIPhMIPxMHQBQI
        AAArAgArAgArAgArAgAqAgAqAgArAgAtAwAjAAAAAABycXHt7eze3t7m5ubu7u7g4eHk5OTp6eng4ODo
        6Ojt7u7e39/m5ubu7u7g4ODl5ubs7Ozg4eHn6Oju7u7g4ODm5+ft7u7g4ODm5ubs7Ozf39/r7OzFxcUe
        HBsRAAA9EAdDGhI/Fg46DwY7EAc8EQc8Egg9Ewc+EwcAACoDACoCACoCACsCACoCACoCACsDACsDACkC
        ACcAACURDyQhICEfHyEhISIjIh8fICAhIiEjIx0gIB4gIB8iIh8iIiAiIiAiIh0gIB4gIB8hIR0fIB8i
        IiEjIx0fHyAjIyMlJh0gIB4hISAjIx8hIRwhIR4cGywMBzQKAjcNBTkPBzkPBzkOBjkPBToQBjsRBjwR
        Bz0RBwAAKwMAKgMAKgIAKgIAKgIAKgIAKgMAKgMAKwIALwMBHAAACAAACQAACgAACgAACAAABwAACAAA
        BwAABgAABQAACAAABwAABgAABwAABgAABQAABgAABgAABwAABwAACAAACQAACAAACQAACQAACgAABwAA
        DgAAMggBOQwFNAsDNQsDNgsEOA0GOA4FOA4FOQ8GOxAGOxAHAAArAwArAwArAgAqAgArAgArAgAqAwAq
        AwAqAgAqAgArAwAtAwAtAgAvBQMxBwQtBAEsAwAtAwAtAgAtAwAsAwAsAgAtAwAuAwAuAgAtAgAsAgAs
        AgAtAgAtAgAtAwEuAwEuBAEwBQExBgExBgIyBwIzCAIzCAIzCAMyCQMzCgM1DAU2CwU2CwU2DAU3DQU4
        DQU5DgY6DwYAACsCACsDACsDACsCACsCACsCACwDASsDASoCACoCACsCACsCACwDACsDACsDASoDACoD
        ACsCACsCACoDACsDACsDACsDACwCACwCACsDACoDACoCACsCACwDACwDACwDACwCACwDACwEAC0FAC4F
        AS4GAS8HATAHAzEHAjIKAzgQCzcOCDQKAzUKBDYLBTYMBTYNBTcOBQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>